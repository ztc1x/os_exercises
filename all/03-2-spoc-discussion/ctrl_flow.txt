Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2015-03-18T11:01:38+08:00

====== 关键控制流 ======

===== design idea =====

==== Control Flow ====
* malloc(size)
	1. 地址对齐
        left = size % align
        if left != 0:
                diff = self.align - left
         size += diff
      
	2. 附加内存块的元数据（一般位于头部）大小
           size += headerSize
       
	3. 根据分配策略查找空闲块列表
            for i in range(len(self.freelist)):
                  eaddr, esize = self.freelist[i][0], self.freelist[i][1]
             ...
             if esize >= size and ((policy == 'BEST'  and esize < bestSize) or
                                  (policy == 'WORST' and esize > bestSize) or
                                  (policy == 'FIRST')):
              ...
	4. 调整空闲块列表
              正好匹配空闲块  freelist.pop(bestIdx) 
              分割空闲块： freelist[bestIdx] = (bestAddr + size, bestSize - size) 

		5. 记录已分配块
               sizemap[addr] = size

* free(addr)
		1. size = sizemap[addr]   //得到已分配块的大小

		2. 放回到空闲块列表中    //采用哪种放置策略  
               INSERT-BACK  ： freelist.append((addr, size))
               INSERT-FRONT：freelist.insert(0, (addr, size))
               ADDRSORT      ：freelist.append((addr, size))
                                                freelist = sorted(freelist, key=lambda e: e[0])
               SIZESORT           :  freelist.append((addr, size))
                                                freelist = sorted(freelist, key=lambda e: e[1], reverse=True)


